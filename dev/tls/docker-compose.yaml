---
services:
  nifi-toolkit:
    image: apache/nifi-toolkit:1.28.1
    container_name: nifi-toolkit
    entrypoint: /bin/bash
    command: /tmp/tls-scripts/nifi-gen-certs.sh
    volumes:
      - tls-cert:/tmp/tls-certs
      - tls-scripts:/tmp/tls-scripts
    environment:
      - KEYSTORE_PASSWORD_NIFI=${KEYSTORE_PASSWORD}
      - KEYSTORE_PASSWORD_NIFI_REG=${KEYSTORE_PASSWORD}
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
  nifi-registry:
    image: ghcr.io/netcracker/nifi-registry:latest
    depends_on:
      nifi-toolkit:
        condition: service_completed_successfully
    volumes:
      - nifi-reg-db:/opt/nifi-registry/nifi-registry-current/database
      - nifi-reg-flow:/opt/nifi-registry/nifi-registry-current/flow_storage
      - tls-cert-reg:/tmp/tls-certs
    ports:
      - 127.0.0.1:18080:18080
    environment:
      - AUTH=tls
      - NIFI_REGISTRY_WEB_HTTPS_PORT=18080
      - NIFI_REGISTRY_WEB_HTTP_HOST=0.0.0.0
      - KEYSTORE_PATH=/tmp/tls-certs/keystore.p12
      - KEYSTORE_TYPE=PKCS12
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}
      - TRUSTSTORE_PATH=/tmp/tls-certs/truststore.p12
      - TRUSTSTORE_TYPE=PKCS12
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
      - INITIAL_ADMIN_IDENTITY=CN=admin, OU=NIFI
volumes:
  tls-scripts:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $GIT_REPO_DIR/.github/workflows/sh/
  tls-cert:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $BASE_DIR/temp-vol/tls-cert/
  tls-cert-reg:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $BASE_DIR/temp-vol/tls-cert/nifi-registry/
  nifi-reg-db:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $BASE_DIR/temp-vol/nifi-reg/database/
  nifi-reg-flow:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $BASE_DIR/temp-vol/nifi-reg/flow-storage/