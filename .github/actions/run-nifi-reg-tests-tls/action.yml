---
name: 'Run NiFi Registry in TLS mode and execute autotests'
description: 'Runs NiFi Registry and Consul containers and executes autotests'
inputs:
  results-dir:
    description: 'Directory to store results'
    required: false
    default: 'tls'
runs:
  using: "composite"
  steps:
    - name: Prepare env
      shell: bash
      run: |
        echo "Preparing env..."
        chmod +x .github/workflows/sh/*.sh
        . .github/workflows/sh/nifi-lib.sh
        prepare_results_dir "${{ inputs.results-dir }}"
        generate_tls_passwords
        create_docker_env_file
        mkdir -p ./temp-vol/nifi-reg/database/
        mkdir -p ./temp-vol/nifi-reg/flow-storage/
        mkdir -p ./temp-vol/tls-cert/
        mkdir -p ./temp-vol/tls-cert/nifi-registry/
        chmod -R 777 ./temp-vol
    - name: Run local nifi
      shell: bash
      run: |
        echo "Starting containers..."
        docker compose -f .github/docker/plain/docker-compose.yaml --env-file ./docker.env up -d
    - name: Wait for nifi-registry container to start
      shell: bash
      continue-on-error: true
      run: |
        . .github/workflows/sh/nifi-lib.sh
        NIFI_CLIENT_PASSWORD=$(cat ./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.password)
        wait_nifi_reg_container "localhost" "18080" "local-nifi-registry-plain" "true" \
          "5" "40" "${{ inputs.results-dir }}" "./temp-vol/tls-cert/nifi/nifi-cert.pem" \
          "./temp-vol/tls-cert/nifi/CN=admin_OU=NIFI.p12" "$NIFI_CLIENT_PASSWORD"
    - name: Run nifi registry API tests
      continue-on-error: true
      uses: ./.github/actions/run-newman-tests
      with:
        collection-name: 'NiFi_Registry_API_Tests.postman_collection.json'
        env-name: 'NiFi_Reg_AT_TLS.json.postman_environment'
        results-dir: '${{ inputs.results-dir }}'
        short-name: 'main-tests'
        tls-ca-certs: "/tmp/tls-certs/nifi/nifi-cert.pem"
        tls-client-certs-config: "/tmp/tls-certs/newman-tls-config.json"
    - name: Cleanup after tests
      shell: bash
      continue-on-error: true
      run: |
        echo "Stopping and removing containers"
        docker compose -f .github/docker/plain/docker-compose.yaml --env-file ./docker.env down -v
        echo "Removing temporary volume data"
        rm -rf ./temp-vol/nifi-reg/