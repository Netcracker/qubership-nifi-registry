---
services:
  nifi-toolkit:
    image: apache/nifi-toolkit:1.28.1
    container_name: nifi-toolkit
    entrypoint: /bin/bash
    command: /tmp/tls-scripts/nifi-gen-certs.sh
    volumes:
      - tls-cert:/tmp/tls-certs
      - tls-scripts:/tmp/tls-scripts
    environment:
      - KEYSTORE_PASSWORD_NIFI=${KEYSTORE_PASSWORD_NIFI}
      - KEYSTORE_PASSWORD_NIFI_REG=${KEYSTORE_PASSWORD_NIFI_REG}
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
  nifi-registry:
    image: local-nifi-registry:test
    depends_on:
      nifi-toolkit:
        condition: service_completed_successfully
      postgresql:
        condition: service_started
    volumes:
      - tls-cert-reg:/tmp/tls-certs
    ports:
      - 127.0.0.1:18080:18080
    environment:
      - AUTH=tls
      - NIFI_REGISTRY_WEB_HTTPS_PORT=18080
      - NIFI_REGISTRY_WEB_HTTP_HOST=0.0.0.0
      - KEYSTORE_PATH=/tmp/tls-certs/keystore.p12
      - KEYSTORE_TYPE=PKCS12
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD_NIFI_REG}
      - TRUSTSTORE_PATH=/tmp/tls-certs/truststore.p12
      - TRUSTSTORE_TYPE=PKCS12
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
      - INITIAL_ADMIN_IDENTITY=admin
      - NIFI_REG_USE_PGDB=true
      - NIFI_REG_DB_FLOW_AUTHORIZERS=standard
      - dbUrl=jdbc:postgresql://postgresql:5432/postgres
      - dbUsername=postgres
      - dbPassword=${DB_PASSWORD}
    container_name: local-nifi-registry
    hostname: nifi-registry
  consul:
    image: hashicorp/consul:1.20
    ports:
      - 127.0.0.1:8500:8500
    hostname: consul
  postgresql:
    image: postgres:16.8
    volumes:
      - pg-db:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    container_name: postgresql
    hostname: postgresql
volumes:
  tls-scripts:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $BASE_DIR/.github/workflows/sh/
  tls-cert:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $BASE_DIR/temp-vol/tls-cert/
  tls-cert-reg:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $BASE_DIR/temp-vol/tls-cert/nifi-registry/
  pg-db:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $BASE_DIR/temp-vol/pg-db/
