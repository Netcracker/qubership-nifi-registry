{
	"info": {
		"_postman_id": "6f9e6416-b71b-4f5f-9e6e-37aebcd9a974",
		"name": "NiFi_Registry_API_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Buckets",
			"item": [
				{
					"name": "Create bucket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestBucket0001\");\r",
									"    pm.environment.set(\"registry.bucket1.id\", jsonData.identifier);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestBucket0001\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create bucket 2nd time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"pm.test(\"Response is text and contains error message\", function () {\r",
									"    var textData = pm.response.text();\r",
									"    pm.expect(textData).to.eql(\"A bucket with the same name already exists\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestBucket0001\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create bucket2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestBucket0002\");\r",
									"    pm.environment.set(\"registry.bucket2.id\", jsonData.identifier);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestBucket0002\",\r\n    \"description\": \"Test Bucket 0002 initial description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create bucket3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestBucket0003\");\r",
									"    pm.environment.set(\"registry.bucket3.id\", jsonData.identifier);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestBucket0003\",\r\n    \"description\": \"Test Bucket 0003 initial description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get buckets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains two created buckets\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    bucketId1 = null;\r",
									"    bucketId2 = null;\r",
									"    for (var i = 0; i < jsonData.length; i++) {\r",
									"        var bucket = jsonData[i]\r",
									"        if (bucket.name == \"TestBucket0001\") {\r",
									"            bucketId1 = bucket.identifier;\r",
									"        }\r",
									"        if (bucket.name == \"TestBucket0002\") {\r",
									"            bucketId2 = bucket.identifier;\r",
									"        }\r",
									"    }\r",
									"    pm.expect(bucketId1 != null).to.eql(true);\r",
									"    pm.expect(bucketId2 != null).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get bucket1 by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains requested bucket\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestBucket0001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify bucket1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains updated bucket\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql(\"Bucket 0001 new description\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Bucket 0001 new description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify bucket3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains updated bucket\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql(\"Bucket 0003 new description\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Bucket 0003 new description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket3.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket3.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete bucket3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains bucket\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql(\"Bucket 0003 new description\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket3.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket3.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get bucket3 by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Response is text and contains error message\", function () {\r",
									"    var textData = pm.response.text();\r",
									"    pm.expect(textData).to.eql(\"The specified bucket ID does not exist in this registry.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket3.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket3.id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Flows",
			"item": [
				{
					"name": "Create flow1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestFlow0001\");\r",
									"    pm.environment.set(\"registry.flow1.id\", jsonData.identifier);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestFlow0001\",\r\n    \"description\": \"Initial flow description 0001\",\r\n    \"type\": \"Flow\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create flow1 2nd time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"pm.test(\"Response is Text and contains error message\", function () {\r",
									"    var textData = pm.response.text();\r",
									"    pm.expect(textData).to.eql(\"A versioned flow with the same name already exists in the selected bucket\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestFlow0001\",\r\n    \"description\": \"Initial flow description 0001\",\r\n    \"type\": \"Flow\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create flow2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestFlow0002\");\r",
									"    pm.environment.set(\"registry.flow2.id\", jsonData.identifier);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestFlow0002\",\r\n    \"description\": \"Initial flow description 0002\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create flow3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestFlow0003\");\r",
									"    pm.environment.set(\"registry.flow3.id\", jsonData.identifier);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestFlow0003\",\r\n    \"description\": \"Initial flow description 0003\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create flow4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestFlow0004\");\r",
									"    pm.environment.set(\"registry.flow4.id\", jsonData.identifier);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestFlow0004\",\r\n    \"description\": \"Initial flow description 0004\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket2.id}}/flows",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket2.id}}",
								"flows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flows bucket1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains 3 created flows\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    flowId1 = null;\r",
									"    flowId2 = null;\r",
									"    flowId3 = null;\r",
									"    flowId4 = null;\r",
									"    for (var i = 0; i < jsonData.length; i++) {\r",
									"        var flow = jsonData[i]\r",
									"        if (flow.name == \"TestFlow0001\") {\r",
									"            flowId1 = flow.identifier;\r",
									"        }\r",
									"        if (flow.name == \"TestFlow0002\") {\r",
									"            flowId2 = flow.identifier;\r",
									"        }\r",
									"        if (flow.name == \"TestFlow0003\") {\r",
									"            flowId3 = flow.identifier;\r",
									"        }\r",
									"        if (flow.name == \"TestFlow0004\") {\r",
									"            flowId4 = flow.identifier;\r",
									"        }\r",
									"    }\r",
									"    pm.expect(flowId1 != null).to.eql(true);\r",
									"    pm.expect(flowId2 != null).to.eql(true);\r",
									"    pm.expect(flowId3 != null).to.eql(true);\r",
									"    pm.expect(flowId4 != null).to.eql(false);\r",
									"    pm.expect(jsonData.length).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flows bucket2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains 1 created flow\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    flowId1 = null;\r",
									"    flowId2 = null;\r",
									"    flowId3 = null;\r",
									"    flowId4 = null;\r",
									"    for (var i = 0; i < jsonData.length; i++) {\r",
									"        var flow = jsonData[i]\r",
									"        if (flow.name == \"TestFlow0001\") {\r",
									"            flowId1 = flow.identifier;\r",
									"        }\r",
									"        if (flow.name == \"TestFlow0002\") {\r",
									"            flowId2 = flow.identifier;\r",
									"        }\r",
									"        if (flow.name == \"TestFlow0003\") {\r",
									"            flowId3 = flow.identifier;\r",
									"        }\r",
									"        if (flow.name == \"TestFlow0004\") {\r",
									"            flowId4 = flow.identifier;\r",
									"        }\r",
									"    }\r",
									"    pm.expect(flowId1 != null).to.eql(false);\r",
									"    pm.expect(flowId2 != null).to.eql(false);\r",
									"    pm.expect(flowId3 != null).to.eql(false);\r",
									"    pm.expect(flowId4 != null).to.eql(true);\r",
									"    pm.expect(jsonData.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket2.id}}/flows",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket2.id}}",
								"flows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow1 by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains requested flow\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestFlow0001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow1.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow1.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify flow1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains updated flow\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql(\"New flow description 0001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestFlow0001\",\r\n    \"description\": \"New flow description 0001\",\r\n    \"type\": \"Flow\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow1.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow1.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify flow3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains updated flow\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql(\"New flow description 0003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestFlow0003\",\r\n    \"description\": \"New flow description 0003\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow3.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow3.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete flow3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains flow\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.description).to.eql(\"New flow description 0003\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow3.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow3.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow3 by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Response is text and contains error message\", function () {\r",
									"    var textData = pm.response.text();\r",
									"    pm.expect(textData).to.eql(\"The specified flow ID does not exist in this bucket.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow3.id}}",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow3.id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Flow Versions",
			"item": [
				{
					"name": "Create flow5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"TestFlow0005\");\r",
									"    pm.environment.set(\"registry.flow5.id\", jsonData.identifier);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestFlow0005\",\r\n    \"description\": \"Initial flow description 0005\",\r\n    \"type\": \"Flow\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create flow5 version1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.flow.name).to.eql(\"TestFlow0005\");\r",
									"    pm.expect(jsonData.snapshotMetadata.version).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"externalControllerServices\":{},\"flowContents\":{\"comments\":\"\",\"componentType\":\"PROCESS_GROUP\",\"connections\":[{\"backPressureDataSizeThreshold\":\"1 GB\",\"backPressureObjectThreshold\":10000,\"bends\":[],\"componentType\":\"CONNECTION\",\"destination\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"name\":\"UpdateAttribute\",\"type\":\"PROCESSOR\"},\"flowFileExpiration\":\"0 sec\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"958ec51b-e7cf-39f0-afcb-a7a459ebeda5\",\"instanceIdentifier\":\"43ce7e2e-0196-1000-c3a0-ba6b0aa0f05e\",\"labelIndex\":1,\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"name\":\"\",\"partitioningAttribute\":\"\",\"prioritizers\":[],\"selectedRelationships\":[\"success\"],\"source\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"name\":\"GenerateFlowFile\",\"type\":\"PROCESSOR\"},\"zIndex\":0}],\"controllerServices\":[],\"defaultBackPressureDataSizeThreshold\":\"1 GB\",\"defaultBackPressureObjectThreshold\":10000,\"defaultFlowFileExpiration\":\"0 sec\",\"flowFileConcurrency\":\"UNBOUNDED\",\"flowFileOutboundPolicy\":\"STREAM_WHEN_AVAILABLE\",\"funnels\":[],\"identifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"inputPorts\":[],\"instanceIdentifier\":\"43ce4132-0196-1000-7c0a-7ec9f0689782\",\"labels\":[],\"name\":\"TestPG0005\",\"outputPorts\":[],\"position\":{\"x\":480.0,\"y\":160.0},\"processGroups\":[],\"processors\":[{\"autoTerminatedRelationships\":[\"success\"],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-update-attribute-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"UpdateAttribute\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":488.0,\"y\":256.0},\"properties\":{\"Store State\":\"Do not store state\",\"canonical-value-lookup-cache-size\":\"100\"},\"propertyDescriptors\":{\"Delete Attributes Expression\":{\"displayName\":\"Delete Attributes Expression\",\"identifiesControllerService\":false,\"name\":\"Delete Attributes Expression\",\"sensitive\":false},\"Store State\":{\"displayName\":\"Store State\",\"identifiesControllerService\":false,\"name\":\"Store State\",\"sensitive\":false},\"canonical-value-lookup-cache-size\":{\"displayName\":\"Cache Value Lookup Cache Size\",\"identifiesControllerService\":false,\"name\":\"canonical-value-lookup-cache-size\",\"sensitive\":false},\"Stateful Variables Initial Value\":{\"displayName\":\"Stateful Variables Initial Value\",\"identifiesControllerService\":false,\"name\":\"Stateful Variables Initial Value\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":25,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.attributes.UpdateAttribute\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-standard-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"GenerateFlowFile\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":487.0,\"y\":64.0},\"properties\":{\"character-set\":\"UTF-8\",\"File Size\":\"0B\",\"Batch Size\":\"1\",\"Unique FlowFiles\":\"false\",\"Data Format\":\"Text\"},\"propertyDescriptors\":{\"character-set\":{\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"name\":\"character-set\",\"sensitive\":false},\"File Size\":{\"displayName\":\"File Size\",\"identifiesControllerService\":false,\"name\":\"File Size\",\"sensitive\":false},\"mime-type\":{\"displayName\":\"Mime Type\",\"identifiesControllerService\":false,\"name\":\"mime-type\",\"sensitive\":false},\"generate-ff-custom-text\":{\"displayName\":\"Custom Text\",\"identifiesControllerService\":false,\"name\":\"generate-ff-custom-text\",\"sensitive\":false},\"Batch Size\":{\"displayName\":\"Batch Size\",\"identifiesControllerService\":false,\"name\":\"Batch Size\",\"sensitive\":false},\"Unique FlowFiles\":{\"displayName\":\"Unique FlowFiles\",\"identifiesControllerService\":false,\"name\":\"Unique FlowFiles\",\"sensitive\":false},\"Data Format\":{\"displayName\":\"Data Format\",\"identifiesControllerService\":false,\"name\":\"Data Format\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":0,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"1 min\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.standard.GenerateFlowFile\",\"yieldDuration\":\"1 sec\"}],\"remoteProcessGroups\":[],\"variables\":{}},\"flowEncodingVersion\":\"1.0\",\"parameterContexts\":{},\"parameterProviders\":{},\"snapshotMetadata\":{\"author\":\"test\",\"comments\":\"Initial version for flow 005\",\"timestamp\":1744894343392,\"version\":1}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow5 version1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.snapshotMetadata.version).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions/1/export",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions",
								"1",
								"export"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export flow5 version1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.flow.name).to.eql(\"TestFlow0005\");\r",
									"    pm.expect(jsonData.snapshotMetadata.version).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions/1",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create flow5 duplicate version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"pm.test(\"Response is text and contains error message\", function () {\r",
									"    var textData = pm.response.text();\r",
									"    pm.expect(textData).to.eql(\"A Versioned flow snapshot with the same version already exists: 1\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"externalControllerServices\":{},\"flowContents\":{\"comments\":\"\",\"componentType\":\"PROCESS_GROUP\",\"connections\":[{\"backPressureDataSizeThreshold\":\"1 GB\",\"backPressureObjectThreshold\":10000,\"bends\":[],\"componentType\":\"CONNECTION\",\"destination\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"name\":\"UpdateAttribute\",\"type\":\"PROCESSOR\"},\"flowFileExpiration\":\"0 sec\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"958ec51b-e7cf-39f0-afcb-a7a459ebeda5\",\"instanceIdentifier\":\"43ce7e2e-0196-1000-c3a0-ba6b0aa0f05e\",\"labelIndex\":1,\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"name\":\"\",\"partitioningAttribute\":\"\",\"prioritizers\":[],\"selectedRelationships\":[\"success\"],\"source\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"name\":\"GenerateFlowFile\",\"type\":\"PROCESSOR\"},\"zIndex\":0}],\"controllerServices\":[],\"defaultBackPressureDataSizeThreshold\":\"1 GB\",\"defaultBackPressureObjectThreshold\":10000,\"defaultFlowFileExpiration\":\"0 sec\",\"flowFileConcurrency\":\"UNBOUNDED\",\"flowFileOutboundPolicy\":\"STREAM_WHEN_AVAILABLE\",\"funnels\":[],\"identifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"inputPorts\":[],\"instanceIdentifier\":\"43ce4132-0196-1000-7c0a-7ec9f0689782\",\"labels\":[],\"name\":\"TestPG0005\",\"outputPorts\":[],\"position\":{\"x\":480.0,\"y\":160.0},\"processGroups\":[],\"processors\":[{\"autoTerminatedRelationships\":[\"success\"],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-update-attribute-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"UpdateAttribute\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":488.0,\"y\":256.0},\"properties\":{\"Store State\":\"Do not store state\",\"canonical-value-lookup-cache-size\":\"100\"},\"propertyDescriptors\":{\"Delete Attributes Expression\":{\"displayName\":\"Delete Attributes Expression\",\"identifiesControllerService\":false,\"name\":\"Delete Attributes Expression\",\"sensitive\":false},\"Store State\":{\"displayName\":\"Store State\",\"identifiesControllerService\":false,\"name\":\"Store State\",\"sensitive\":false},\"canonical-value-lookup-cache-size\":{\"displayName\":\"Cache Value Lookup Cache Size\",\"identifiesControllerService\":false,\"name\":\"canonical-value-lookup-cache-size\",\"sensitive\":false},\"Stateful Variables Initial Value\":{\"displayName\":\"Stateful Variables Initial Value\",\"identifiesControllerService\":false,\"name\":\"Stateful Variables Initial Value\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":25,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.attributes.UpdateAttribute\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-standard-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"GenerateFlowFile\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":487.0,\"y\":64.0},\"properties\":{\"character-set\":\"UTF-8\",\"File Size\":\"0B\",\"Batch Size\":\"1\",\"Unique FlowFiles\":\"false\",\"Data Format\":\"Text\"},\"propertyDescriptors\":{\"character-set\":{\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"name\":\"character-set\",\"sensitive\":false},\"File Size\":{\"displayName\":\"File Size\",\"identifiesControllerService\":false,\"name\":\"File Size\",\"sensitive\":false},\"mime-type\":{\"displayName\":\"Mime Type\",\"identifiesControllerService\":false,\"name\":\"mime-type\",\"sensitive\":false},\"generate-ff-custom-text\":{\"displayName\":\"Custom Text\",\"identifiesControllerService\":false,\"name\":\"generate-ff-custom-text\",\"sensitive\":false},\"Batch Size\":{\"displayName\":\"Batch Size\",\"identifiesControllerService\":false,\"name\":\"Batch Size\",\"sensitive\":false},\"Unique FlowFiles\":{\"displayName\":\"Unique FlowFiles\",\"identifiesControllerService\":false,\"name\":\"Unique FlowFiles\",\"sensitive\":false},\"Data Format\":{\"displayName\":\"Data Format\",\"identifiesControllerService\":false,\"name\":\"Data Format\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":0,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"1 min\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.standard.GenerateFlowFile\",\"yieldDuration\":\"1 sec\"}],\"remoteProcessGroups\":[],\"variables\":{}},\"flowEncodingVersion\":\"1.0\",\"parameterContexts\":{},\"parameterProviders\":{},\"snapshotMetadata\":{\"author\":\"test\",\"comments\":\"Initial version for flow 005\",\"timestamp\":1744894343392,\"version\":1}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create flow5 version2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.flow.name).to.eql(\"TestFlow0005\");\r",
									"    pm.expect(jsonData.snapshotMetadata.version).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"externalControllerServices\":{},\"flowContents\":{\"comments\":\"\",\"componentType\":\"PROCESS_GROUP\",\"connections\":[{\"backPressureDataSizeThreshold\":\"1 GB\",\"backPressureObjectThreshold\":10000,\"bends\":[],\"componentType\":\"CONNECTION\",\"destination\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"31c2c717-2106-371d-919a-60aed6135a75\",\"instanceIdentifier\":\"01961000-6f8c-13ce-3221-bb866b6d7b9f\",\"name\":\"UpdateAttribute1\",\"type\":\"PROCESSOR\"},\"flowFileExpiration\":\"0 sec\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"2c9613c5-13c4-39da-9e26-731a03769690\",\"instanceIdentifier\":\"01961000-7e2e-13ce-1f48-374918029769\",\"labelIndex\":1,\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"name\":\"\",\"partitioningAttribute\":\"\",\"prioritizers\":[],\"selectedRelationships\":[\"success\"],\"source\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"ff350dbb-337f-3019-bc88-69b1ccb7e853\",\"instanceIdentifier\":\"01961000-5e0a-13ce-17cd-c788334047b3\",\"name\":\"GenerateFlowFile1\",\"type\":\"PROCESSOR\"},\"zIndex\":0},{\"backPressureDataSizeThreshold\":\"1 GB\",\"backPressureObjectThreshold\":10000,\"bends\":[],\"componentType\":\"CONNECTION\",\"destination\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"name\":\"UpdateAttribute\",\"type\":\"PROCESSOR\"},\"flowFileExpiration\":\"0 sec\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"958ec51b-e7cf-39f0-afcb-a7a459ebeda5\",\"instanceIdentifier\":\"43ce7e2e-0196-1000-c3a0-ba6b0aa0f05e\",\"labelIndex\":1,\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"name\":\"\",\"partitioningAttribute\":\"\",\"prioritizers\":[],\"selectedRelationships\":[\"success\"],\"source\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"name\":\"GenerateFlowFile\",\"type\":\"PROCESSOR\"},\"zIndex\":0}],\"controllerServices\":[],\"defaultBackPressureDataSizeThreshold\":\"1 GB\",\"defaultBackPressureObjectThreshold\":10000,\"defaultFlowFileExpiration\":\"0 sec\",\"flowFileConcurrency\":\"UNBOUNDED\",\"flowFileOutboundPolicy\":\"STREAM_WHEN_AVAILABLE\",\"funnels\":[],\"identifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"inputPorts\":[],\"instanceIdentifier\":\"43ce4132-0196-1000-7c0a-7ec9f0689782\",\"labels\":[],\"name\":\"TestPG0005\",\"outputPorts\":[],\"position\":{\"x\":480.0,\"y\":160.0},\"processGroups\":[],\"processors\":[{\"autoTerminatedRelationships\":[\"success\"],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-update-attribute-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"UpdateAttribute\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":488.0,\"y\":256.0},\"properties\":{\"Store State\":\"Do not store state\",\"canonical-value-lookup-cache-size\":\"100\"},\"propertyDescriptors\":{\"Delete Attributes Expression\":{\"displayName\":\"Delete Attributes Expression\",\"identifiesControllerService\":false,\"name\":\"Delete Attributes Expression\",\"sensitive\":false},\"Store State\":{\"displayName\":\"Store State\",\"identifiesControllerService\":false,\"name\":\"Store State\",\"sensitive\":false},\"canonical-value-lookup-cache-size\":{\"displayName\":\"Cache Value Lookup Cache Size\",\"identifiesControllerService\":false,\"name\":\"canonical-value-lookup-cache-size\",\"sensitive\":false},\"Stateful Variables Initial Value\":{\"displayName\":\"Stateful Variables Initial Value\",\"identifiesControllerService\":false,\"name\":\"Stateful Variables Initial Value\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":25,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.attributes.UpdateAttribute\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-standard-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"ff350dbb-337f-3019-bc88-69b1ccb7e853\",\"instanceIdentifier\":\"01961000-5e0a-13ce-17cd-c788334047b3\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"GenerateFlowFile1\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":936.0,\"y\":64.0},\"properties\":{\"character-set\":\"UTF-8\",\"File Size\":\"0B\",\"Batch Size\":\"1\",\"Unique FlowFiles\":\"false\",\"Data Format\":\"Text\"},\"propertyDescriptors\":{\"character-set\":{\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"name\":\"character-set\",\"sensitive\":false},\"File Size\":{\"displayName\":\"File Size\",\"identifiesControllerService\":false,\"name\":\"File Size\",\"sensitive\":false},\"mime-type\":{\"displayName\":\"Mime Type\",\"identifiesControllerService\":false,\"name\":\"mime-type\",\"sensitive\":false},\"generate-ff-custom-text\":{\"displayName\":\"Custom Text\",\"identifiesControllerService\":false,\"name\":\"generate-ff-custom-text\",\"sensitive\":false},\"Batch Size\":{\"displayName\":\"Batch Size\",\"identifiesControllerService\":false,\"name\":\"Batch Size\",\"sensitive\":false},\"Unique FlowFiles\":{\"displayName\":\"Unique FlowFiles\",\"identifiesControllerService\":false,\"name\":\"Unique FlowFiles\",\"sensitive\":false},\"Data Format\":{\"displayName\":\"Data Format\",\"identifiesControllerService\":false,\"name\":\"Data Format\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":0,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"1 min\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.standard.GenerateFlowFile\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-standard-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"GenerateFlowFile\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":487.0,\"y\":64.0},\"properties\":{\"character-set\":\"UTF-8\",\"File Size\":\"0B\",\"Batch Size\":\"1\",\"Unique FlowFiles\":\"false\",\"Data Format\":\"Text\"},\"propertyDescriptors\":{\"character-set\":{\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"name\":\"character-set\",\"sensitive\":false},\"File Size\":{\"displayName\":\"File Size\",\"identifiesControllerService\":false,\"name\":\"File Size\",\"sensitive\":false},\"mime-type\":{\"displayName\":\"Mime Type\",\"identifiesControllerService\":false,\"name\":\"mime-type\",\"sensitive\":false},\"generate-ff-custom-text\":{\"displayName\":\"Custom Text\",\"identifiesControllerService\":false,\"name\":\"generate-ff-custom-text\",\"sensitive\":false},\"Batch Size\":{\"displayName\":\"Batch Size\",\"identifiesControllerService\":false,\"name\":\"Batch Size\",\"sensitive\":false},\"Unique FlowFiles\":{\"displayName\":\"Unique FlowFiles\",\"identifiesControllerService\":false,\"name\":\"Unique FlowFiles\",\"sensitive\":false},\"Data Format\":{\"displayName\":\"Data Format\",\"identifiesControllerService\":false,\"name\":\"Data Format\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":0,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"1 min\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.standard.GenerateFlowFile\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[\"success\"],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-update-attribute-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"31c2c717-2106-371d-919a-60aed6135a75\",\"instanceIdentifier\":\"01961000-6f8c-13ce-3221-bb866b6d7b9f\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"UpdateAttribute1\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":936.0,\"y\":256.0},\"properties\":{\"Store State\":\"Do not store state\",\"canonical-value-lookup-cache-size\":\"100\"},\"propertyDescriptors\":{\"Delete Attributes Expression\":{\"displayName\":\"Delete Attributes Expression\",\"identifiesControllerService\":false,\"name\":\"Delete Attributes Expression\",\"sensitive\":false},\"Store State\":{\"displayName\":\"Store State\",\"identifiesControllerService\":false,\"name\":\"Store State\",\"sensitive\":false},\"canonical-value-lookup-cache-size\":{\"displayName\":\"Cache Value Lookup Cache Size\",\"identifiesControllerService\":false,\"name\":\"canonical-value-lookup-cache-size\",\"sensitive\":false},\"Stateful Variables Initial Value\":{\"displayName\":\"Stateful Variables Initial Value\",\"identifiesControllerService\":false,\"name\":\"Stateful Variables Initial Value\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":25,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.attributes.UpdateAttribute\",\"yieldDuration\":\"1 sec\"}],\"remoteProcessGroups\":[],\"variables\":{}},\"flowEncodingVersion\":\"1.0\",\"parameterContexts\":{},\"parameterProviders\":{},\"snapshotMetadata\":{\"author\":\"test\",\"comments\":\"Modified version2 with additional processors\",\"timestamp\":1744894370461,\"version\":2}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow5 version2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.flow.name).to.eql(\"TestFlow0005\");\r",
									"    pm.expect(jsonData.snapshotMetadata.version).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions/2",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow5 version3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Response is text and contains error message\", function () {\r",
									"    var textData = pm.response.text();\r",
									"    pm.expect(textData).to.eql(\"The specified versioned flow snapshot does not exist for this flow.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions/3",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow5 diff v1-v2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some diff data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.componentDifferenceGroups.length).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/diff/1/2",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"diff",
								"1",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow5 versions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains 2 versions\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow5 latest version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains version 2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.snapshotMetadata.version).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions/latest",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions",
								"latest"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow5 latest version metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains version 2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.version).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions/latest/metadata",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions",
								"latest",
								"metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import flow5 version3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.flow.name).to.eql(\"TestFlow0005\");\r",
									"    pm.expect(jsonData.snapshotMetadata.version).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"externalControllerServices\":{},\"flowContents\":{\"comments\":\"\",\"componentType\":\"PROCESS_GROUP\",\"connections\":[{\"backPressureDataSizeThreshold\":\"1 GB\",\"backPressureObjectThreshold\":10000,\"bends\":[],\"componentType\":\"CONNECTION\",\"destination\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"31c2c717-2106-371d-919a-60aed6135a75\",\"instanceIdentifier\":\"01961000-6f8c-13ce-3221-bb866b6d7b9f\",\"name\":\"UpdateAttribute1\",\"type\":\"PROCESSOR\"},\"flowFileExpiration\":\"0 sec\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"2c9613c5-13c4-39da-9e26-731a03769690\",\"instanceIdentifier\":\"01961000-7e2e-13ce-1f48-374918029769\",\"labelIndex\":1,\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"name\":\"\",\"partitioningAttribute\":\"\",\"prioritizers\":[],\"selectedRelationships\":[\"success\"],\"source\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"ff350dbb-337f-3019-bc88-69b1ccb7e853\",\"instanceIdentifier\":\"01961000-5e0a-13ce-17cd-c788334047b3\",\"name\":\"GenerateFlowFile1\",\"type\":\"PROCESSOR\"},\"zIndex\":0},{\"backPressureDataSizeThreshold\":\"1 GB\",\"backPressureObjectThreshold\":10000,\"bends\":[],\"componentType\":\"CONNECTION\",\"destination\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"name\":\"UpdateAttribute\",\"type\":\"PROCESSOR\"},\"flowFileExpiration\":\"0 sec\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"958ec51b-e7cf-39f0-afcb-a7a459ebeda5\",\"instanceIdentifier\":\"43ce7e2e-0196-1000-c3a0-ba6b0aa0f05e\",\"labelIndex\":1,\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"name\":\"\",\"partitioningAttribute\":\"\",\"prioritizers\":[],\"selectedRelationships\":[\"success\"],\"source\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"name\":\"GenerateFlowFile\",\"type\":\"PROCESSOR\"},\"zIndex\":0}],\"controllerServices\":[],\"defaultBackPressureDataSizeThreshold\":\"1 GB\",\"defaultBackPressureObjectThreshold\":10000,\"defaultFlowFileExpiration\":\"0 sec\",\"flowFileConcurrency\":\"UNBOUNDED\",\"flowFileOutboundPolicy\":\"STREAM_WHEN_AVAILABLE\",\"funnels\":[],\"identifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"inputPorts\":[],\"instanceIdentifier\":\"43ce4132-0196-1000-7c0a-7ec9f0689782\",\"labels\":[],\"name\":\"TestPG0005\",\"outputPorts\":[],\"position\":{\"x\":480.0,\"y\":160.0},\"processGroups\":[],\"processors\":[{\"autoTerminatedRelationships\":[\"success\"],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-update-attribute-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"UpdateAttribute\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":488.0,\"y\":256.0},\"properties\":{\"Store State\":\"Do not store state\",\"canonical-value-lookup-cache-size\":\"100\"},\"propertyDescriptors\":{\"Delete Attributes Expression\":{\"displayName\":\"Delete Attributes Expression\",\"identifiesControllerService\":false,\"name\":\"Delete Attributes Expression\",\"sensitive\":false},\"Store State\":{\"displayName\":\"Store State\",\"identifiesControllerService\":false,\"name\":\"Store State\",\"sensitive\":false},\"canonical-value-lookup-cache-size\":{\"displayName\":\"Cache Value Lookup Cache Size\",\"identifiesControllerService\":false,\"name\":\"canonical-value-lookup-cache-size\",\"sensitive\":false},\"Stateful Variables Initial Value\":{\"displayName\":\"Stateful Variables Initial Value\",\"identifiesControllerService\":false,\"name\":\"Stateful Variables Initial Value\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":25,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.attributes.UpdateAttribute\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-standard-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"ff350dbb-337f-3019-bc88-69b1ccb7e853\",\"instanceIdentifier\":\"01961000-5e0a-13ce-17cd-c788334047b3\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"GenerateFlowFile1\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":936.0,\"y\":64.0},\"properties\":{\"character-set\":\"UTF-8\",\"File Size\":\"0B\",\"Batch Size\":\"1\",\"Unique FlowFiles\":\"false\",\"Data Format\":\"Text\"},\"propertyDescriptors\":{\"character-set\":{\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"name\":\"character-set\",\"sensitive\":false},\"File Size\":{\"displayName\":\"File Size\",\"identifiesControllerService\":false,\"name\":\"File Size\",\"sensitive\":false},\"mime-type\":{\"displayName\":\"Mime Type\",\"identifiesControllerService\":false,\"name\":\"mime-type\",\"sensitive\":false},\"generate-ff-custom-text\":{\"displayName\":\"Custom Text\",\"identifiesControllerService\":false,\"name\":\"generate-ff-custom-text\",\"sensitive\":false},\"Batch Size\":{\"displayName\":\"Batch Size\",\"identifiesControllerService\":false,\"name\":\"Batch Size\",\"sensitive\":false},\"Unique FlowFiles\":{\"displayName\":\"Unique FlowFiles\",\"identifiesControllerService\":false,\"name\":\"Unique FlowFiles\",\"sensitive\":false},\"Data Format\":{\"displayName\":\"Data Format\",\"identifiesControllerService\":false,\"name\":\"Data Format\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":0,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"1 min\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.standard.GenerateFlowFile\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-standard-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"GenerateFlowFile\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":487.0,\"y\":64.0},\"properties\":{\"character-set\":\"UTF-8\",\"File Size\":\"0B\",\"Batch Size\":\"1\",\"Unique FlowFiles\":\"false\",\"Data Format\":\"Text\"},\"propertyDescriptors\":{\"character-set\":{\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"name\":\"character-set\",\"sensitive\":false},\"File Size\":{\"displayName\":\"File Size\",\"identifiesControllerService\":false,\"name\":\"File Size\",\"sensitive\":false},\"mime-type\":{\"displayName\":\"Mime Type\",\"identifiesControllerService\":false,\"name\":\"mime-type\",\"sensitive\":false},\"generate-ff-custom-text\":{\"displayName\":\"Custom Text\",\"identifiesControllerService\":false,\"name\":\"generate-ff-custom-text\",\"sensitive\":false},\"Batch Size\":{\"displayName\":\"Batch Size\",\"identifiesControllerService\":false,\"name\":\"Batch Size\",\"sensitive\":false},\"Unique FlowFiles\":{\"displayName\":\"Unique FlowFiles\",\"identifiesControllerService\":false,\"name\":\"Unique FlowFiles\",\"sensitive\":false},\"Data Format\":{\"displayName\":\"Data Format\",\"identifiesControllerService\":false,\"name\":\"Data Format\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":0,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"1 min\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.standard.GenerateFlowFile\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[\"success\"],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-update-attribute-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"31c2c717-2106-371d-919a-60aed6135a75\",\"instanceIdentifier\":\"01961000-6f8c-13ce-3221-bb866b6d7b9f\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"UpdateAttribute1\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":936.0,\"y\":256.0},\"properties\":{\"Store State\":\"Do not store state\",\"canonical-value-lookup-cache-size\":\"100\"},\"propertyDescriptors\":{\"Delete Attributes Expression\":{\"displayName\":\"Delete Attributes Expression\",\"identifiesControllerService\":false,\"name\":\"Delete Attributes Expression\",\"sensitive\":false},\"Store State\":{\"displayName\":\"Store State\",\"identifiesControllerService\":false,\"name\":\"Store State\",\"sensitive\":false},\"canonical-value-lookup-cache-size\":{\"displayName\":\"Cache Value Lookup Cache Size\",\"identifiesControllerService\":false,\"name\":\"canonical-value-lookup-cache-size\",\"sensitive\":false},\"Stateful Variables Initial Value\":{\"displayName\":\"Stateful Variables Initial Value\",\"identifiesControllerService\":false,\"name\":\"Stateful Variables Initial Value\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":25,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.attributes.UpdateAttribute\",\"yieldDuration\":\"1 sec\"}],\"remoteProcessGroups\":[],\"variables\":{}},\"flowEncodingVersion\":\"1.0\",\"parameterContexts\":{},\"parameterProviders\":{},\"snapshotMetadata\":{\"author\":\"test\",\"comments\":\"Modified version3 with additional processors\",\"timestamp\":1744894370461,\"version\":3}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions/import",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import flow5 version4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains some data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.flow.name).to.eql(\"TestFlow0005\");\r",
									"    pm.expect(jsonData.snapshotMetadata.version).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"externalControllerServices\":{},\"flowContents\":{\"comments\":\"\",\"componentType\":\"PROCESS_GROUP\",\"connections\":[{\"backPressureDataSizeThreshold\":\"1 GB\",\"backPressureObjectThreshold\":10000,\"bends\":[],\"componentType\":\"CONNECTION\",\"destination\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"31c2c717-2106-371d-919a-60aed6135a75\",\"instanceIdentifier\":\"01961000-6f8c-13ce-3221-bb866b6d7b9f\",\"name\":\"UpdateAttribute1\",\"type\":\"PROCESSOR\"},\"flowFileExpiration\":\"0 sec\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"2c9613c5-13c4-39da-9e26-731a03769690\",\"instanceIdentifier\":\"01961000-7e2e-13ce-1f48-374918029769\",\"labelIndex\":1,\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"name\":\"\",\"partitioningAttribute\":\"\",\"prioritizers\":[],\"selectedRelationships\":[\"success\"],\"source\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"ff350dbb-337f-3019-bc88-69b1ccb7e853\",\"instanceIdentifier\":\"01961000-5e0a-13ce-17cd-c788334047b3\",\"name\":\"GenerateFlowFile1\",\"type\":\"PROCESSOR\"},\"zIndex\":0},{\"backPressureDataSizeThreshold\":\"1 GB\",\"backPressureObjectThreshold\":10000,\"bends\":[],\"componentType\":\"CONNECTION\",\"destination\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"name\":\"UpdateAttribute\",\"type\":\"PROCESSOR\"},\"flowFileExpiration\":\"0 sec\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"958ec51b-e7cf-39f0-afcb-a7a459ebeda5\",\"instanceIdentifier\":\"43ce7e2e-0196-1000-c3a0-ba6b0aa0f05e\",\"labelIndex\":1,\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"name\":\"\",\"partitioningAttribute\":\"\",\"prioritizers\":[],\"selectedRelationships\":[\"success\"],\"source\":{\"comments\":\"\",\"groupId\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"id\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"name\":\"GenerateFlowFile\",\"type\":\"PROCESSOR\"},\"zIndex\":0}],\"controllerServices\":[],\"defaultBackPressureDataSizeThreshold\":\"1 GB\",\"defaultBackPressureObjectThreshold\":10000,\"defaultFlowFileExpiration\":\"0 sec\",\"flowFileConcurrency\":\"UNBOUNDED\",\"flowFileOutboundPolicy\":\"STREAM_WHEN_AVAILABLE\",\"funnels\":[],\"identifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"inputPorts\":[],\"instanceIdentifier\":\"43ce4132-0196-1000-7c0a-7ec9f0689782\",\"labels\":[],\"name\":\"TestPG0005\",\"outputPorts\":[],\"position\":{\"x\":480.0,\"y\":160.0},\"processGroups\":[],\"processors\":[{\"autoTerminatedRelationships\":[\"success\"],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-update-attribute-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"995071cd-d73b-31d7-800d-dfc40e4b0308\",\"instanceIdentifier\":\"43ce6f8c-0196-1000-b679-8474200670ba\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"UpdateAttribute\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":488.0,\"y\":256.0},\"properties\":{\"Store State\":\"Do not store state\",\"canonical-value-lookup-cache-size\":\"100\"},\"propertyDescriptors\":{\"Delete Attributes Expression\":{\"displayName\":\"Delete Attributes Expression\",\"identifiesControllerService\":false,\"name\":\"Delete Attributes Expression\",\"sensitive\":false},\"Store State\":{\"displayName\":\"Store State\",\"identifiesControllerService\":false,\"name\":\"Store State\",\"sensitive\":false},\"canonical-value-lookup-cache-size\":{\"displayName\":\"Cache Value Lookup Cache Size\",\"identifiesControllerService\":false,\"name\":\"canonical-value-lookup-cache-size\",\"sensitive\":false},\"Stateful Variables Initial Value\":{\"displayName\":\"Stateful Variables Initial Value\",\"identifiesControllerService\":false,\"name\":\"Stateful Variables Initial Value\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":25,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.attributes.UpdateAttribute\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-standard-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"ff350dbb-337f-3019-bc88-69b1ccb7e853\",\"instanceIdentifier\":\"01961000-5e0a-13ce-17cd-c788334047b3\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"GenerateFlowFile1\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":936.0,\"y\":64.0},\"properties\":{\"character-set\":\"UTF-8\",\"File Size\":\"0B\",\"Batch Size\":\"1\",\"Unique FlowFiles\":\"false\",\"Data Format\":\"Text\"},\"propertyDescriptors\":{\"character-set\":{\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"name\":\"character-set\",\"sensitive\":false},\"File Size\":{\"displayName\":\"File Size\",\"identifiesControllerService\":false,\"name\":\"File Size\",\"sensitive\":false},\"mime-type\":{\"displayName\":\"Mime Type\",\"identifiesControllerService\":false,\"name\":\"mime-type\",\"sensitive\":false},\"generate-ff-custom-text\":{\"displayName\":\"Custom Text\",\"identifiesControllerService\":false,\"name\":\"generate-ff-custom-text\",\"sensitive\":false},\"Batch Size\":{\"displayName\":\"Batch Size\",\"identifiesControllerService\":false,\"name\":\"Batch Size\",\"sensitive\":false},\"Unique FlowFiles\":{\"displayName\":\"Unique FlowFiles\",\"identifiesControllerService\":false,\"name\":\"Unique FlowFiles\",\"sensitive\":false},\"Data Format\":{\"displayName\":\"Data Format\",\"identifiesControllerService\":false,\"name\":\"Data Format\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":0,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"1 min\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.standard.GenerateFlowFile\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-standard-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"3ec352df-45d4-3b56-b9ae-e7af4844b09b\",\"instanceIdentifier\":\"43ce5e0a-0196-1000-d10b-cdbd5f0e5dee\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"GenerateFlowFile\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":487.0,\"y\":64.0},\"properties\":{\"character-set\":\"UTF-8\",\"File Size\":\"0B\",\"Batch Size\":\"1\",\"Unique FlowFiles\":\"false\",\"Data Format\":\"Text\"},\"propertyDescriptors\":{\"character-set\":{\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"name\":\"character-set\",\"sensitive\":false},\"File Size\":{\"displayName\":\"File Size\",\"identifiesControllerService\":false,\"name\":\"File Size\",\"sensitive\":false},\"mime-type\":{\"displayName\":\"Mime Type\",\"identifiesControllerService\":false,\"name\":\"mime-type\",\"sensitive\":false},\"generate-ff-custom-text\":{\"displayName\":\"Custom Text\",\"identifiesControllerService\":false,\"name\":\"generate-ff-custom-text\",\"sensitive\":false},\"Batch Size\":{\"displayName\":\"Batch Size\",\"identifiesControllerService\":false,\"name\":\"Batch Size\",\"sensitive\":false},\"Unique FlowFiles\":{\"displayName\":\"Unique FlowFiles\",\"identifiesControllerService\":false,\"name\":\"Unique FlowFiles\",\"sensitive\":false},\"Data Format\":{\"displayName\":\"Data Format\",\"identifiesControllerService\":false,\"name\":\"Data Format\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":0,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"1 min\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.standard.GenerateFlowFile\",\"yieldDuration\":\"1 sec\"},{\"autoTerminatedRelationships\":[\"success\"],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"bulletinLevel\":\"WARN\",\"bundle\":{\"artifact\":\"nifi-update-attribute-nar\",\"group\":\"org.apache.nifi\",\"version\":\"1.28.1\"},\"comments\":\"\",\"componentType\":\"PROCESSOR\",\"concurrentlySchedulableTaskCount\":1,\"executionNode\":\"ALL\",\"groupIdentifier\":\"d43bd07d-cd92-328d-8bf5-eb91c3bc0c88\",\"identifier\":\"31c2c717-2106-371d-919a-60aed6135a75\",\"instanceIdentifier\":\"01961000-6f8c-13ce-3221-bb866b6d7b9f\",\"maxBackoffPeriod\":\"10 mins\",\"name\":\"UpdateAttribute1\",\"penaltyDuration\":\"30 sec\",\"position\":{\"x\":936.0,\"y\":256.0},\"properties\":{\"Store State\":\"Do not store state\",\"canonical-value-lookup-cache-size\":\"100\"},\"propertyDescriptors\":{\"Delete Attributes Expression\":{\"displayName\":\"Delete Attributes Expression\",\"identifiesControllerService\":false,\"name\":\"Delete Attributes Expression\",\"sensitive\":false},\"Store State\":{\"displayName\":\"Store State\",\"identifiesControllerService\":false,\"name\":\"Store State\",\"sensitive\":false},\"canonical-value-lookup-cache-size\":{\"displayName\":\"Cache Value Lookup Cache Size\",\"identifiesControllerService\":false,\"name\":\"canonical-value-lookup-cache-size\",\"sensitive\":false},\"Stateful Variables Initial Value\":{\"displayName\":\"Stateful Variables Initial Value\",\"identifiesControllerService\":false,\"name\":\"Stateful Variables Initial Value\",\"sensitive\":false}},\"retriedRelationships\":[],\"retryCount\":10,\"runDurationMillis\":25,\"scheduledState\":\"ENABLED\",\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"style\":{},\"type\":\"org.apache.nifi.processors.attributes.UpdateAttribute\",\"yieldDuration\":\"1 sec\"}],\"remoteProcessGroups\":[],\"variables\":{}},\"flowEncodingVersion\":\"1.0\",\"parameterContexts\":{},\"parameterProviders\":{},\"snapshotMetadata\":{\"author\":\"test\",\"comments\":\"Modified version3 with additional processors\",\"timestamp\":1744894370461,\"version\":3}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions/import",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get flow5 latest version metadata Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is JSON and contains version 4\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.version).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{nifi.registry.url}}/nifi-registry-api/buckets/{{registry.bucket1.id}}/flows/{{registry.flow5.id}}/versions/latest/metadata",
							"host": [
								"{{nifi.registry.url}}"
							],
							"path": [
								"nifi-registry-api",
								"buckets",
								"{{registry.bucket1.id}}",
								"flows",
								"{{registry.flow5.id}}",
								"versions",
								"latest",
								"metadata"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}